{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/videos.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/drag-drop\";\nconst _c0 = [\"videoElement\"];\nfunction VideosComponent_video_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"video\", 4, 5);\n    i0.ɵɵlistener(\"cdkDragEnded\", function VideosComponent_video_3_Template_video_cdkDragEnded_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const singleVideo_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSwipe($event, singleVideo_r1.keywords));\n    });\n    i0.ɵɵelement(2, \"source\", 6);\n    i0.ɵɵtext(3, \" Your browser does not support the video tag. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const singleVideo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", singleVideo_r1.url, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class VideosComponent {\n  constructor(videoService, renderer) {\n    this.videoService = videoService;\n    this.renderer = renderer;\n    this.videos = this.videoService.getVideos();\n    this.filteredVideos = [];\n    this.isLoading = false;\n    this.selectedKeywords = [];\n    this.count = 0;\n    this.triggerEvaluation = new EventEmitter();\n  }\n  ngOnInit() {\n    this.filterVideos(this.keywords);\n    document.addEventListener('keydown', this.handleKeyboardEvent.bind(this));\n  }\n  ngAfterViewInit() {}\n  filterVideos(keywords) {\n    this.filteredVideos = this.videos.filter(video => {\n      return video.keywords.some(keyword => keywords.includes(keyword));\n    });\n    console.log(this.filteredVideos);\n  }\n  answer(answer) {}\n  onSwipe(event, keywords) {\n    this.count++;\n    const xDifference = event.distance.x;\n    const element = event.source.element.nativeElement;\n    if (xDifference > 0) {\n      this.selectedKeywords = [...this.selectedKeywords, ...keywords];\n      console.log(\"Swiped Right\");\n    } else if (xDifference < 0) {\n      console.log(\"Swiped Left\");\n    }\n    this.renderer.addClass(element, 'fade-out');\n    if (this.filteredVideos.length === this.count) {\n      this.triggerEvaluation.emit(this.selectedKeywords);\n    }\n  }\n  swipeLeft(keywords) {\n    const fakeEvent = {\n      source: {\n        element: {\n          nativeElement: document.querySelector('video') // get the first video\n        }\n      },\n\n      distance: {\n        x: -1,\n        y: 0\n      }\n    };\n    this.onSwipe(fakeEvent, keywords);\n  }\n  swipeRight(keywords) {\n    const fakeEvent = {\n      source: {\n        element: {\n          nativeElement: document.querySelector('video') // get the first video\n        }\n      },\n\n      distance: {\n        x: 1,\n        y: 0\n      }\n    };\n    this.onSwipe(fakeEvent, keywords);\n  }\n  handleKeyboardEvent(event) {\n    alert(1);\n    const keywords = this.getCurrentVideoKeywords();\n    switch (event.key) {\n      case 'ArrowLeft':\n        this.swipeLeft(keywords);\n        break;\n      case 'ArrowRight':\n        this.swipeRight(keywords);\n        break;\n      default:\n        // handle other keys if needed\n        break;\n    }\n  }\n  getCurrentVideoKeywords() {\n    let keywords = [];\n    this.videoRefs.forEach((videoRef, index) => {\n      const videoElem = videoRef.nativeElement;\n      if (!videoElem.classList.contains('fade-out')) {\n        keywords = this.filteredVideos[index].keywords;\n        return; // exit the loop once the video is found\n      }\n    });\n\n    return keywords;\n  }\n  static #_ = this.ɵfac = function VideosComponent_Factory(t) {\n    return new (t || VideosComponent)(i0.ɵɵdirectiveInject(i1.VideosService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VideosComponent,\n    selectors: [[\"app-videos\"]],\n    viewQuery: function VideosComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.videoRefs = _t);\n      }\n    },\n    inputs: {\n      keywords: \"keywords\"\n    },\n    outputs: {\n      triggerEvaluation: \"triggerEvaluation\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"container\", 3, \"keydown\"], [1, \"view-box\"], [1, \"view-content\"], [\"autoplay\", \"\", \"muted\", \"\", \"loop\", \"\", \"cdkDrag\", \"\", 3, \"cdkDragEnded\", 4, \"ngFor\", \"ngForOf\"], [\"autoplay\", \"\", \"muted\", \"\", \"loop\", \"\", \"cdkDrag\", \"\", 3, \"cdkDragEnded\"], [\"videoElement\", \"\"], [\"type\", \"video/mp4\", 3, \"src\"]],\n    template: function VideosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"keydown\", function VideosComponent_Template_div_keydown_0_listener($event) {\n          return ctx.handleKeyboardEvent($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, VideosComponent_video_3_Template, 4, 1, \"video\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredVideos);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.CdkDrag],\n    styles: [\".fade-out[_ngcontent-%COMP%] {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: all 0.3s;\\n}\\n\\nvideo[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 1;\\n  width: 300px;\\n  height: 300px;\\n  object-fit: cover;\\n}\\n\\n.view-box[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 300px;\\n  height: 400px;\\n  border: 1px solid #000000;\\n  background: #EEEEEE;\\n}\\n\\n.view-content[_ngcontent-%COMP%] {\\n  position: relative;\\n  padding: 10px;\\n  flex-grow: 1;\\n  display: flex;\\n  align-items: center;\\n  text-align: center;\\n}\\n\\n.btn-container[_ngcontent-%COMP%] {\\n  padding: 10px 10px 0;\\n  height: 40px;\\n}\\n.btn-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n@media only screen and (max-width: 767px) {\\n  \\n  .view-box[_ngcontent-%COMP%] {\\n    height: 300px;\\n    width: 300px;\\n  }\\n}\\n@media only screen and (min-width: 768px) and (max-width: 1023px) {\\n  \\n  .view-box[_ngcontent-%COMP%] {\\n    width: 600px;\\n    height: 600px;\\n  }\\n}\\n@media only screen and (min-width: 1024px) {\\n  \\n  .view-box[_ngcontent-%COMP%] {\\n    width: 800px;\\n    height: 800px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy92aWRlb3MvdmlkZW9zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGtCQUFBO0VBQ0Esb0JBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLG9CQUFBO0VBQ0EsWUFBQTtBQUNGO0FBQUU7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7QUFFSjs7QUFFQTtFQUNFLDhCQUFBO0VBQ0E7SUFDRSxhQUFBO0lBQ0EsWUFBQTtFQUNGO0FBQ0Y7QUFFQTtFQUNFLHVCQUFBO0VBQ0E7SUFDRSxZQUFBO0lBQ0EsYUFBQTtFQUFGO0FBQ0Y7QUFHQTtFQUNFLHVCQUFBO0VBQ0E7SUFDRSxZQUFBO0lBQ0EsYUFBQTtFQURGO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFkZS1vdXQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuXG52aWRlbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxO1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4udmlldy1ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogNDAwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDA7XG4gIGJhY2tncm91bmQ6ICNFRUVFRUU7XG59XG5cbi52aWV3LWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGZsZXgtZ3JvdzogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYnRuLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDEwcHggMTBweCAwO1xuICBoZWlnaHQ6IDQwcHg7XG4gIGRpdiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAvKiBzdHlsZXMgZm9yIG1vYmlsZSBkZXZpY2VzICovXG4gIC52aWV3LWJveCB7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgICB3aWR0aDogMzAwcHg7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAvKiBzdHlsZXMgZm9yIHRhYmxldHMgKi9cbiAgLnZpZXctYm94IHtcbiAgICB3aWR0aDogNjAwcHg7XG4gICAgaGVpZ2h0OiA2MDBweDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAvKiBzdHlsZXMgZm9yIGRlc2t0b3AgKi9cbiAgLnZpZXctYm94IHtcbiAgICB3aWR0aDogODAwcHg7XG4gICAgaGVpZ2h0OiA4MDBweDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","VideosComponent","constructor","videoService","renderer","getVideos","ngOnInit","filterVideos","keywords","document","addEventListener","handleKeyboardEvent","bind","ngAfterViewInit","filteredVideos","videos","filter","video","some","keyword","includes","console","log","answer","onSwipe","event","count","xDifference","distance","x","element","source","nativeElement","selectedKeywords","addClass","length","triggerEvaluation","emit","swipeLeft","fakeEvent","querySelector","y","swipeRight","alert","getCurrentVideoKeywords","key","videoRefs","forEach","videoRef","index","videoElem","classList","contains","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/denys/Coding/hackaton-current/hackaton/src/app/components/videos/videos.component.ts","/Users/denys/Coding/hackaton-current/hackaton/src/app/components/videos/videos.component.html"],"sourcesContent":["import { Renderer2, EventEmitter, Output, Component, Input, OnInit, AfterViewInit, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { VideosService } from 'src/app/services/videos.service';\nimport { CdkDragEnd } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-videos',\n  templateUrl: './videos.component.html',\n  styleUrls: ['./videos.component.scss']\n})\nexport class VideosComponent implements OnInit, AfterViewInit {\n  videos = this.videoService.getVideos();\n  filteredVideos: any[] = [];\n  isLoading = false;\n  selectedKeywords: string[] = [];\n  count = 0;\n\n  @Input('keywords') keywords!: string[];\n  @Output('triggerEvaluation') triggerEvaluation = new EventEmitter<string[]>();\n  @ViewChildren('videoElement') videoRefs!: QueryList<ElementRef>;\n\n  constructor(\n    private videoService: VideosService,\n    private renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.filterVideos(this.keywords);\n    document.addEventListener('keydown', this.handleKeyboardEvent.bind(this));\n  }\n\n  ngAfterViewInit(): void {}\n\n  filterVideos(keywords: string[]) {\n    this.filteredVideos = this.videos.filter((video: any) => {\n      return video.keywords.some((keyword: string) => keywords.includes(keyword));\n    });\n    console.log(this.filteredVideos);\n  }\n\n  answer(answer: string) {\n\n  }\n\n  onSwipe(event: CdkDragEnd, keywords: string[]) {\n    this.count++;\n    const xDifference = event.distance.x;\n    const element = event.source.element.nativeElement;\n  \n    if (xDifference > 0) {\n      this.selectedKeywords = [...this.selectedKeywords, ...keywords];\n      console.log(\"Swiped Right\");\n    } else if (xDifference < 0) {\n      console.log(\"Swiped Left\");\n    }\n    this.renderer.addClass(element, 'fade-out');\n\n    if (this.filteredVideos.length === this.count) {\n      this.triggerEvaluation.emit(this.selectedKeywords);\n    }\n  }\n\n  swipeLeft(keywords: string[]) {\n    const fakeEvent: CdkDragEnd = {\n      source: {\n        element: {\n          nativeElement: document.querySelector('video')  // get the first video\n        }\n      },\n      distance: {\n        x: -1,  // negative for left swipe\n        y: 0\n      }\n    } as any;\n\n    this.onSwipe(fakeEvent, keywords);\n  }\n\n  swipeRight(keywords: string[]) {\n    const fakeEvent: CdkDragEnd = {\n      source: {\n        element: {\n          nativeElement: document.querySelector('video')  // get the first video\n        }\n      },\n      distance: {\n        x: 1,  // positive for right swipe\n        y: 0\n      }\n    } as any;\n\n    this.onSwipe(fakeEvent, keywords);\n  }\n\n  handleKeyboardEvent(event: KeyboardEvent) {\n    alert(1)\n    const keywords = this.getCurrentVideoKeywords();\n\n    switch(event.key) {\n        case 'ArrowLeft':\n            this.swipeLeft(keywords);\n            break;\n        case 'ArrowRight':\n            this.swipeRight(keywords);\n            break;\n        default:\n            // handle other keys if needed\n            break;\n    }\n  }\n\n  getCurrentVideoKeywords(): string[] {\n    let keywords: string[] = [];\n\n    this.videoRefs.forEach((videoRef, index) => {\n        const videoElem: HTMLElement = videoRef.nativeElement;\n        if (!videoElem.classList.contains('fade-out')) {\n            keywords = this.filteredVideos[index].keywords;\n            return; // exit the loop once the video is found\n        }\n    });\n\n    return keywords;\n}\n\n\n\n}\n","<div class=\"container\" (keydown)=\"handleKeyboardEvent($event)\">\n  <div class=\"view-box\">\n    <div class=\"view-content\">\n        <video *ngFor=\"let singleVideo of filteredVideos\" #videoElement autoplay muted loop cdkDrag (cdkDragEnded)=\"onSwipe($event, singleVideo.keywords)\">\n          <source [src]=\"singleVideo.url\" type=\"video/mp4\">\n          Your browser does not support the video tag.\n        </video>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}